#include<stdio.h>
#include<stdlib.h>
#include<malloc.h>
struct node
{
	int data;
	struct node *left,*right;
}*root=NULL,*newnode;

struct node* create(struct node*root,int ele)
{
	if(root==NULL)
	{
		newnode=(struct node*)malloc(sizeof(struct node));
		newnode->data=ele;
		newnode->left=NULL;
		newnode->right=NULL;
	    return(newnode);
	}
	else if(ele<root->data)
	root->left=create(root->left,ele);
	else if(ele>root->data)
	root->right=create(root->right,ele);
    return(root);
}
void inorder(struct node*root)
{
	if(root!=NULL)
	{
		inorder(root->left);
		printf("%d  ",root->data);
		inorder(root->right);
	}
}
void preorder(struct node*root)
{
	if(root!=NULL)
	{
		printf("%d ",root->data);
		preorder(root->left);
		preorder(root->right);
	}
}
void postorder(struct node*root)
{
	if(root!=NULL)
	{
		postorder(root->left);
		postorder(root->right);
		printf("%d ",root->data);
	}
}
int main()
{
	int ch,ele;
	do
	{
		printf("\n\n1.create\n2.inorder\n3.preorder\n4.postorder\n5.exit");
		printf("enter your choice");
		scanf("%d",&ch);
		
	

switch(ch)
{
	case 1:printf("enter the element");
	scanf("%d",&ele);
	root=create(root,ele);
	break;
	case 2:inorder(root);
	break;
		case 3:preorder(root);
	break;
		case 4:postorder(root);
	break;
		case 5:exit(0);
	break;
}
}
while(ch>0 && ch<=5);
return 0;
}
